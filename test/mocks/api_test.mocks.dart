// Mocks generated by Mockito 5.4.6 from annotations
// in post_test/test/mocks/services/api_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:post_test/models/comment.dart' as _i5;
import 'package:post_test/models/post.dart' as _i2;
import 'package:post_test/services/api_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePost_0 extends _i1.SmartFake implements _i2.Post {
  _FakePost_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Post>> fetchPosts() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPosts, []),
            returnValue: _i4.Future<List<_i2.Post>>.value(<_i2.Post>[]),
          )
          as _i4.Future<List<_i2.Post>>);

  @override
  _i4.Future<_i2.Post> fetchPostById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchPostById, [id]),
            returnValue: _i4.Future<_i2.Post>.value(
              _FakePost_0(this, Invocation.method(#fetchPostById, [id])),
            ),
          )
          as _i4.Future<_i2.Post>);

  @override
  _i4.Future<List<_i5.Comment>> fetchCommentsByPostId(int? postId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchCommentsByPostId, [postId]),
            returnValue: _i4.Future<List<_i5.Comment>>.value(<_i5.Comment>[]),
          )
          as _i4.Future<List<_i5.Comment>>);

  @override
  _i4.Future<_i2.Post> createPost(Map<String, dynamic>? postData) =>
      (super.noSuchMethod(
            Invocation.method(#createPost, [postData]),
            returnValue: _i4.Future<_i2.Post>.value(
              _FakePost_0(this, Invocation.method(#createPost, [postData])),
            ),
          )
          as _i4.Future<_i2.Post>);

  @override
  _i4.Future<_i2.Post> updatePost(int? id, Map<String, dynamic>? updatedData) =>
      (super.noSuchMethod(
            Invocation.method(#updatePost, [id, updatedData]),
            returnValue: _i4.Future<_i2.Post>.value(
              _FakePost_0(
                this,
                Invocation.method(#updatePost, [id, updatedData]),
              ),
            ),
          )
          as _i4.Future<_i2.Post>);

  @override
  _i4.Future<void> deletePost(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePost, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
